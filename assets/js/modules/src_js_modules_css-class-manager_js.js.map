{"version":3,"file":"js/modules/src_js_modules_css-class-manager_js.js","mappings":"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","sources":["webpack:///./src/js/modules/css-class-manager.js"],"sourcesContent":["const CSSClassManager = {\r\n    init: function () {\r\n        document.addEventListener(\"click\", this.manageClasses);\r\n        document.addEventListener(\"mouseover\", this.manageClasses);\r\n        document.addEventListener(\"mouseleave\", this.manageClasses,true);\r\n    },\r\n    manageClasses: function (event) {\r\n\r\n        if (event.target.classList && event.target.classList.contains(\"css-modifier\")) {\r\n            /*if(event.type==='mouseout'){\r\n                console.log(event.target)\r\n            }*/\r\n            let cssClassesStr = event.target.dataset.classes ?? 'active';\r\n            let cssClasses = cssClassesStr.split(\",\");\r\n            let gettersSelector = event.target.dataset.classGetters;\r\n            let losersSelector = event.target.dataset.classLosers;\r\n            let addEvent = event.target.dataset.addEvent ?? 'click';\r\n            let removeEvent = event.target.dataset.removeEvent ?? 'click';\r\n\r\n\r\n            //let action = addEvent===event.type ? 'add' : (removeEvent===event.type ? 'remove' : '')\r\n\r\n\r\n            if (addEvent === event.type) {\r\n                CSSClassManager.changeClasses({\r\n                    event: event,\r\n                    selector: gettersSelector,\r\n                    cssClasses: cssClasses,\r\n                    action: 'add'\r\n                });\r\n            }\r\n            if (removeEvent === event.type) {\r\n                CSSClassManager.changeClasses({\r\n                    event: event,\r\n                    selector: losersSelector,\r\n                    cssClasses: cssClasses,\r\n                    action: 'remove'\r\n                });\r\n            }\r\n\r\n\r\n            //CSSClassManager.changeClasses(losersSelector,cssClasses,'remove');\r\n            /*if (gettersSelector) {\r\n                document.querySelectorAll(gettersSelector).forEach(element => {\r\n                    if (toggle) {\r\n                        if(!cssClasses.every(function(className) {\r\n                            return Array.from(element.classList).includes(className);\r\n                        })){\r\n\r\n                        }\r\n                    } else {\r\n                        element.classList.add(...cssClasses)\r\n                    }\r\n                });\r\n            }\r\n            if (losersSelector) {\r\n                document.querySelectorAll(losersSelector).forEach(element => {\r\n                    element.classList.remove(...cssClasses)\r\n                });\r\n            }*/\r\n        }\r\n    },\r\n    changeClasses: function (args) {\r\n        let toggle = false;\r\n        let selector = args.selector;\r\n        let cssClasses = args.cssClasses;\r\n        let action = args.action;\r\n        //alert('555');\r\n        document.querySelectorAll(selector).forEach(element => {\r\n            //window[method_prefix + method_name](arg1, arg2);\r\n            element.classList[action](...cssClasses);\r\n\r\n            /*if ('add' === action) {\r\n                if (toggle) {\r\n                    if (!cssClasses.every(function (className) {\r\n                        return Array.from(element.classList).includes(className);\r\n                    })) {\r\n                        element.classList.add(...cssClasses);\r\n                    } else {\r\n                        element.classList.remove(...cssClasses);\r\n                    }\r\n                } else {\r\n                    element.classList.add(...cssClasses)\r\n                }\r\n            } else if ('remove' === action) {\r\n                if (toggle) {\r\n                    if (cssClasses.every(function (className) {\r\n                        return Array.from(element.classList).includes(className);\r\n                    })) {\r\n                        element.classList.remove(...cssClasses);\r\n                    } else {\r\n                        element.classList.add(...cssClasses);\r\n                    }\r\n                } else {\r\n                    element.classList.remove(...cssClasses);\r\n                }\r\n            }*/\r\n        });\r\n    },\r\n\r\n}\r\nmodule.exports = CSSClassManager;"],"names":["CSSClassManager","init","document","addEventListener","manageClasses","event","target","classList","contains","_event$target$dataset","_event$target$dataset2","_event$target$dataset3","cssClassesStr","dataset","classes","cssClasses","split","gettersSelector","classGetters","losersSelector","classLosers","addEvent","removeEvent","type","changeClasses","selector","action","args","toggle","querySelectorAll","forEach","element","_element$classList","apply","_toConsumableArray","module","exports"],"sourceRoot":""}