{"version":3,"file":"js/modules/src_js_modules_slider_js.js","mappings":";;;;;;;;AAAA,IAAMA,MAAM,GAAG;EACXC,IAAI,EAAE,SAAAA,KAAA,EAAY;IACd,IAAIC,WAAW,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;IACrC,IAAI,CAACC,WAAW,CAACF,WAAW,CAAC;IAC7B,IAAI,CAACG,gBAAgB,CAACH,WAAW,CAAC;EACtC,CAAC;EACDE,WAAW,EAAE,SAAAA,YAAUE,OAAO,EAAE;IAC5B,CAACA,OAAO,IAAI,EAAE,EAAEC,OAAO,CAAC,UAACC,IAAI,EAAK;MAC9BA,IAAI,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC;EACDL,gBAAgB,EAAE,SAAAA,iBAAUC,OAAO,EAAE;IACjC,CAACA,OAAO,IAAI,EAAE,EAAEC,OAAO,CAAC,UAACC,IAAI,EAAK;MAC9B,CAACA,IAAI,CAACG,MAAM,IAAI,EAAE,EAAEJ,OAAO,CAAC,UAACK,aAAa,EAAK;QAC3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,OAAO,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;UACrC,IAAIJ,SAAS,GAAGH,OAAO,CAACO,CAAC,CAAC;UAC1B,IAAID,aAAa,KAAKH,SAAS,CAACM,OAAO,EAAE;YACrCP,IAAI,CAACC,SAAS,CAACO,IAAI,CAACP,SAAS,CAACA,SAAS,CAAC;UAC5C;QACJ;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACDN,YAAY,EAAE,SAAAA,aAAA,EAAY;IACtB,IAAIG,OAAO,GAAGW,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAC;IAClD,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAIb,OAAO,CAACQ,MAAM,EAAE;MAChB,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,OAAO,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;QACrC,IAAIO,aAAa,GAAGd,OAAO,CAACO,CAAC,CAAC;QAC9B;QACA,IAAIQ,oBAAoB,GACpB;UACIC,IAAI,EAAE,OAAO;UACbC,UAAU,EAAE,KAAK;UACjBC,OAAO,EAAE,CAAC;UACVC,WAAW,EAAE;YACT,GAAG,EAAE;cACDC,OAAO,EAAE;YACb;UACJ,CAAC;UACDC,SAAS,EAAE;QACf,CAAC;QACL;AAChB;AACA;AACA;QACgB,IAAIC,MAAM,GAAG,IAAIC,MAAM,CAACT,aAAa,EAAEC,oBAAoB,CAAC;QAC5DF,UAAU,CAACW,IAAI,CAAC;UACZrB,SAAS,EAAEmB,MAAM;UACjB;UACAb,OAAO,EAAEK,aAAa;UACtBT,MAAM,EAAEM,QAAQ,CAACC,gBAAgB,CAACE,aAAa,CAACW,OAAO,CAACC,UAAU;QACtE,CAAC,CAAC;MACN;MACA,OAAOb,UAAU;IACrB;EACJ;AACJ,CAAC;AACDc,MAAM,CAACC,OAAO,GAAGlC,MAAM","sources":["webpack:///./src/js/modules/slider.js"],"sourcesContent":["const slider = {\r\n    init: function () {\r\n        let splidesObjs = this.setupSplides();\r\n        this.initSplides(splidesObjs);\r\n        this.handleSplideSync(splidesObjs);\r\n    },\r\n    initSplides: function (splides) {\r\n        (splides || []).forEach((item) => {\r\n            item.splideObj.mount();\r\n        });\r\n    },\r\n    handleSplideSync: function (splides) {\r\n        (splides || []).forEach((item) => {\r\n            (item.target || []).forEach((elementTarget) => {\r\n                for (var i = 0; i < splides.length; i++) {\r\n                    var splideObj = splides[i];\r\n                    if (elementTarget === splideObj.element) {\r\n                        item.splideObj.sync(splideObj.splideObj);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    },\r\n    setupSplides: function () {\r\n        var splides = document.querySelectorAll('.splide');\r\n        let splidesArr = [];\r\n        if (splides.length) {\r\n            for (var i = 0; i < splides.length; i++) {\r\n                var splideElement = splides[i];\r\n                //3.1 if no options are defined by 'data-splide' attribute: take these default options\r\n                var splideDefaultOptions =\r\n                    {\r\n                        type: 'slide',\r\n                        pagination: false,\r\n                        perMove: 1,\r\n                        breakpoints: {\r\n                            764: {\r\n                                perPage: 1,\r\n                            },\r\n                        },\r\n                        arrowPath: \"M 20 17.5 L 20 0 L 40 20 L 20 40 L 20 22.5 L 0 22.5 L 0 17.5 Z M 20 17.5 \"\r\n                    }\r\n                /**\r\n                 * 3.2 if options are defined by 'data-splide' attribute: default options will we overridden\r\n                 * see documentation: https://splidejs.com/guides/options/#by-data-attribute\r\n                 **/\r\n                var splide = new Splide(splideElement, splideDefaultOptions);\r\n                splidesArr.push({\r\n                    splideObj: splide,\r\n                    //classList: splideElement.classList,\r\n                    element: splideElement,\r\n                    target: document.querySelectorAll(splideElement.dataset.syncTarget)\r\n                });\r\n            }\r\n            return splidesArr;\r\n        }\r\n    }\r\n}\r\nmodule.exports = slider;"],"names":["slider","init","splidesObjs","setupSplides","initSplides","handleSplideSync","splides","forEach","item","splideObj","mount","target","elementTarget","i","length","element","sync","document","querySelectorAll","splidesArr","splideElement","splideDefaultOptions","type","pagination","perMove","breakpoints","perPage","arrowPath","splide","Splide","push","dataset","syncTarget","module","exports"],"sourceRoot":""}